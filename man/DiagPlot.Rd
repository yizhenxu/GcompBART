% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DiagPlots.R
\name{DiagPlot}
\alias{DiagPlot}
\title{Diagnostic Plots}
\usage{
DiagPlot(bfit, plot_type, byrow = TRUE)
}
\arguments{
\item{bfit}{Fitted object from model_bart call,}

\item{plot_type}{0 for predictor inclusion proportions plot; 1 for diagnostic plots of average M-H acceptance percentage, tree nodes, tree leaves, and tree depth,}

\item{byrow}{Default is TRUE, each row of the diagnostic plot represents one latent; column if FALSE. This is only for multinomial response,}
}
\value{
Percent_Acceptance Percent acceptance of Metropolis-Hastings proposals across the ntrees number of trees for each posterior draw after burn-in,

Tree_Num_Nodes Average number of tree nodes across the ntrees number of trees for each posterior draw after burn-in,

Tree_Num_Leaves Average number of leaves across the ntrees number of trees for each posterior draw after burn-in,

Tree_Depth Average tree depth across the ntrees number of trees for each posterior draw after burn-in,

Inclusion_Proportions Predictor inclusion frequencies. Smaller value of ntrees (such as 10, 20, 50, 100) is recommended for the purposes of variable selection.
}
\description{
Plot average M-H acceptance percentage, tree nodes, tree leaves, tree depth, and predictor inclusion proportions.
}
\examples{
##simulate data (example from Friedman MARS paper)
f = function(x){
 10*sin(pi*x[,1]*x[,2]) + 20*(x[,3]-.5)^2+10*x[,4]+5*x[,5]
}
sigma = 1.0 #y = f(x) + sigma*z , z~N(0,1)
n = 100 #number of observations
set.seed(99)
x=matrix(runif(n*10),n,10) #10 variables, only first 5 matter
Ey = f(x)
y=Ey+sigma*rnorm(n)
fml = as.formula("y ~ X1+X2+X3+X4+X5+X6+X7+X8+X9+X10")
bfit = BART_call(fml, data = dd, test.data = NULL,
                Prior = list(nu = 3, sigq = 0.9,
                             ntrees = 200,
                             kfac = 2,
                             pswap = 0.1, pbd = 0.5, pb = 0.25,
                             alpha = 0.95, beta = 2.0,
                             nc = 100, minobsnode = 10),
                Mcmc = list(burn=100, ndraws = 88))
DiagPlot(bfit, 0)
}
